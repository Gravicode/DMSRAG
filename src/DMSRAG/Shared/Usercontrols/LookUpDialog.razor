@using System.Data
<MudDialog>
    <DialogContent>
        <MudGrid>
            <MudItem xs="12">
                @if (DataLookup == null)
                {
                    <p><em>Loading...</em></p>
                }
                else
                {
                    <MudTable T="System.Data.DataRow" Context="item" Items="@DataLookup.AsEnumerable()" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<DataRow,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">@Message</MudText>
                            <MudSpacer />
                            <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                        </ToolBarContent>
                        <HeaderContent>
                            @foreach (DataColumn dc in DataLookup.Columns)
                            {
                                <MudTh>@dc.ColumnName</MudTh>
                            }
                            <MudTh>Actions</MudTh>
                        </HeaderContent>
                        <RowTemplate>


                            @foreach (DataColumn dc in DataLookup.Columns)
                            {
                                <MudTd DataLabel="Propinsi">@item[dc.ColumnName].ToString()</MudTd>
                            }

                            <MudTd DataLabel="Actions">
                                <MudButton Size="@Size.Small"  ButtonType="MudBlazor.ButtonType.Button" @onclick="(() => Pilih(item))" DisableElevation="true" Variant="Variant.Filled" Color="Color.Primary" Class="mr-2">Pilih</MudButton>
                            </MudTd>
                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager />
                        </PagerContent>
                        <NoRecordsContent>
                            <MudText>Tidak ada item yang ditemukan..</MudText>
                        </NoRecordsContent>
                        <LoadingContent>
                            <MudText>Sabar menunggu...</MudText>
                        </LoadingContent>
                    </MudTable>
                }
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton Size="@Size.Small"  Color="Color.Primary" OnClick="Close">Ok</MudButton>
    </DialogActions>
</MudDialog>


@code {
    #region mudtable
    private bool dense = true;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = false;
    private string searchString1 = "";
    private DataRow selectedItem1 = null;


    private bool FilterFunc1(DataRow element) => FilterFunc(element, searchString1);

    private bool FilterFunc(DataRow element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        foreach (DataColumn dc in DataLookup.Columns)
        {
            if (element[dc.ColumnName].ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
                return true;
        }

        return false;
    }
    #endregion

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    async Task Close()
    {
        await OnClick.InvokeAsync(true);
        MudDialog.Close(DialogResult.Ok(true));
    }
    async Task Pilih(DataRow dr)
    {
        Dictionary<string, string> selected = new();
        foreach (DataColumn dc in DataLookup.Columns)
        {
            selected[dc.ColumnName] = dr[dc.ColumnName].ToString();
        }
        await OnClick.InvokeAsync(true);
        MudDialog.Close(selected);
    }
    [Parameter]
    public string Message { get; set; } = "Pencarian Data..";

    [Parameter]
    public DataTable DataLookup { get; set; }

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public EventCallback<bool> OnClick { get; set; }
}